{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handlerChenge","event","currentTarget","value","setState","reset","hendlerSubmit","preventDefault","props","addContact","this","className","styles","contactForm","onSubmit","label","type","input","onChange","pattern","title","required","labelNumber","button","Component","ContactList","contacts","deleteContact","list","map","id","item","textName","textNumber","onClick","Filter","filter","onHendlerChenge","App","contactFormState","contact","uuidv4","find","alert","prevState","chengeFilter","contactId","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","normolizedFinder","toLowerCase","visibleContacts","includes","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e03e121f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1pVjx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__f7W9w\",\"label\":\"ContactForm_label__PBxqj\",\"input\":\"ContactForm_input__PLw5_\",\"button\":\"ContactForm_button__3WpZb\",\"labelNumber\":\"ContactForm_labelNumber__4H2b9\"};","import React, { Component } from 'react';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    }\r\n\r\n    handlerChenge = (event) => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({\r\n        [name]: value,\r\n        });\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: \"\", number: \"\" });\r\n    };\r\n\r\n    hendlerSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.props.addContact(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n            <form className={styles.contactForm} onSubmit={this.hendlerSubmit}>\r\n                <label className={styles.label}>Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className={styles.input}\r\n                    value={name}\r\n                    onChange={this.handlerChenge}\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n                <label className={styles.labelNumber}>Number</label>\r\n                <input\r\n                    type=\"tel\"\r\n                    className={styles.input}\r\n                    value={number}\r\n                    onChange={this.handlerChenge}\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n                <button type=\"submit\" className={styles.button}>Add contact</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li key={id} className={styles.item}>\r\n                    <span className={styles.textName}>{name}:</span>\r\n                    <span className={styles.textNumber}>{number}</span>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={styles.button}\r\n                        onClick={() => deleteContact(id)}\r\n                    >Delete</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        })\r\n    ),\r\n    deleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onHendlerChenge }) => {\r\n    return (\r\n        <div>\r\n            <h2 className={styles.title}>Find contact by name</h2>\r\n            <input\r\n                type=\"text\"\r\n                className={styles.input}\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={onHendlerChenge}\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    onHendlerChenge: PropTypes.func,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (contactFormState) => {\n    const { name, number } = contactFormState;\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    const isRepeat = this.state.contacts.find(\n      ({ name }) => name === contactFormState.name\n    );\n\n    isRepeat ? alert(`${name} is already in contacts`)\n      : this.setState((prevState) => ({\n         contacts: [contact, ...prevState.contacts],\n      }));\n  };\n\n  chengeFilter = (event) => {\n    const { value } = event.currentTarget;\n    this.setState({\n      filter: value,\n    });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parseContacts = JSON.parse(contacts);\n    if (parseContacts) {\n      this.setState({ contacts: parseContacts });\n    }\n  };\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const normolizedFinder = filter.toLowerCase();\n    const visibleContacts = contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(normolizedFinder)\n    );\n\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} onHendlerChenge={this.chengeFilter} />\n        <ContactList contacts={visibleContacts} deleteContact={this.deleteContact} />\n      </div>\n    );\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__27kgA\",\"item\":\"ContactList_item__2XlaX\",\"textName\":\"ContactList_textName__2I2WF\",\"textNumber\":\"ContactList_textNumber__2vHzU\",\"button\":\"ContactList_button__3p-SC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1o9e3\",\"input\":\"Filter_input__2heBt\"};"],"sourceRoot":""}